client()
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
cat("Connecting to server...\n")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...")
pswd = readLines(con, 1)
if(pswd=="QUIT") {
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
close(con)
}
}
client()
client()
pswd = readLines(con, 1)
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
data = readLines(con, 1)
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
pswd = readLines(con, 1)
pswd = readLines(con, 1)
pswd=="QUIT"
length(pswd)
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
cat("Connecting to server...\n")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client
client()
client()
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
cat("Connecting to server...\n")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
server()
client()
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=1)
con
readline("Connecting to server...\nFirst run the server and then press enter to continue...")
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
readline("Connecting to server...\nFirst run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
return()
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client()
client()
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
close(con)
return()
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client()
client()
client <- function(){
text = readRDS("message.RDS")
quit=FALSE
while(!quit){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!quit) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
quit=TRUE
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
library(hgutils)
startup()
library("BMS")
library("stringr")
library("crayon")
linewidth = 228 #height=55
key = "FACADE" %>% hex2bin %>% paste0(collapse = "")
generate_text = function(key, linewidth) {
ok = FALSE
while(!ok) {
img = load.image("mssg.png")
width = width(img); height=height(img)
img %<>% resize(size_x=linewidth, size_y=round(linewidth/width*height), size_c = 1) %>% {.>0.5} %>% as.matrix
img = apply(t(img), c(1,2), function(x) ifelse(x,ifelse(runif(1)>0.9,"1","0"),"1"))
text = img %>% apply(1, function(x) paste0(x,collapse = ""))
ok = !any(sapply(text, function(x) str_detect(x,key)))
}
text %<>% sapply(function(x) {r = floor(runif(1,0,nchar(x))); paste0(str_sub(x,1,r), key, str_sub(x,r+1,nchar(x)))})
text %<>% paste0(collapse = "")
}
splt = function(str, length = 180) {
acc = c()
while(nchar(str) > length) {
acc = c(acc, substr(str, 1, length))
str = substr(str,length+1,nchar(str))
}
acc
}
display_text = function(text, linewidth, pswd =  "X") {
txt = splt(text %>% str_replace_all(pswd, ""), linewidth) %>% str_replace_all("1", green("1"))
cat(paste0(txt, collapse = "\n"))
}
client <- function(){
text = readRDS("message.RDS")
quit=FALSE
while(!quit){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!quit) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
quit=TRUE
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client()
client <- function(){
text = readRDS("message.RDS")
quit<<-FALSE
while(!quit){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!quit) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
quit<<-TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client <- function(){
text = readRDS("message.RDS")
qt=FALSE
while(!qt){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!qt) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
qt=TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client <- function(){
text = readRDS("message.RDS")
qt=FALSE
while(!qt){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!qt) {
print(qt)
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
qt=TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client <- function(){
text = readRDS("message.RDS")
qt<<-FALSE
while(!qt){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!qt) {
print(qt)
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
qt<<-TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
qt
client <- function(){
text = readRDS("message.RDS")
abort_client<<-FALSE
while(!abort_client){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!abort_client) {
print(abort_client)
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
abort_client<<-TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
client <- function(){
text = readRDS("message.RDS")
abort_client<<-FALSE
while(!abort_client){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!abort_client) {
print(abort_client)
cat("Waiting for password...\n")
pswd = readLines(con, 1)
browser()
print(pswd)
if (length(pswd)>0) {
if(pswd=="QUIT") {
abort_client<<-TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
print(pswd)
pswd = readLines(con, 1)
pswd = readLines(con, 1)
client <- function(){
text = readRDS("message.RDS")
abort_client<<-FALSE
while(!abort_client){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(!abort_client) {
print(abort_client)
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
abort_client<<-TRUE
close(con)
break
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client
client()
client <- function(){
text = readRDS("message.RDS")
while(TRUE){
readline("Connecting to server: first run the server and then press enter to continue...")
con <- socketConnection(host="192.168.2.3", port = 7337, blocking=TRUE,
server=FALSE, open="r+", timeout=15)
writeLines("REQUEST_CONNECT", con)
data = readLines(con, 1)
if(data=="CONNECT_SUCCESS") {
while(TRUE) {
cat("Waiting for password...\n")
pswd = readLines(con, 1)
if (length(pswd)>0) {
if(pswd=="QUIT") {
close(con)
return()
} else {
display_text(text, linewidth, pswd)
cat("\n")
}
}
}
}
close(con)
}
}
client()
